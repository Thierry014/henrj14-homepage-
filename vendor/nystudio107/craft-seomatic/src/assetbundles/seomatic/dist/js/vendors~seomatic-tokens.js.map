{"version":3,"sources":["webpack:///./node_modules/events/events.js","webpack:///./node_modules/tokenfield/lib/tokenfield.js","webpack:///./node_modules/tokenfield/lib/ajax.js"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","m","events","existing","warning","TypeError","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","i","arguments","removeListener","bind","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","n","copy","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","context","handler","len","listeners","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","_tokenfields","reRegExpChar","reHasRegExpChar","RegExp","source","_factory","document","createElement","_templates","containerTokenfield","containerList","suggestItem","setItem","guid","Math","random","toString","includes","item","indexOf","findElement","input","nodeName","querySelector","build","html","all","replace","innerHTML","childNodes","keyToChar","e","keyIdentifier","fromCharCode","parseInt","substr","__webpack_exports__","events_default","a","[object Object]","options","super","_defaults","_options","focusedItem","cache","timer","xhr","suggested","suggestedItems","setItems","delimiters","el","form","mode","addItemOnBlur","addItemsOnPaste","keepItemsOrder","items","newItems","multiple","maxItems","minLength","17","16","91","8","27","37","38","39","40","46","65","67","88","9","13","108","matchRegex","matchFlags","matchStart","matchEnd","copyProperty","copyDelimiter","remote","url","queryParam","delay","timestampParam","params","headers","placeholder","inputType","minChars","maxSuggest","maxSuggestWindow","filterSetItems","filterMatchCase","singleInput","singleInputValue","singleInputDelimiter","itemLabel","itemName","newItemName","itemValue","newItemValue","itemData","id","_vars","assign","templates","_prepareData","remapData","_focused","_input","_form","_html","o","forEach","delimiter","tokenfield","node","parentNode","_render","container","suggest","suggestList","setAttribute","copyHelper","style","display","_renderSizer","parentElement","insertBefore","firstChild","_setEvents","_renderItems","_resizeInput","b","_getBounds","window","getComputedStyle","compensate","paddingLeft","paddingRight","styles","width","height","overflow","whiteSpace","maxWidth","top","left","fontSize","sizer","appendChild","empty","v","val","borderRightWidth","fullCompensate","borderLeftWidth","sb","getBoundingClientRect","ib","rw","r","reqData","limit","round","Date","getTime","callback","XMLHttpRequest","paramsArr","encodeURIComponent","paramsString","join","toLowerCase","open","header","setRequestHeader","onreadystatechange","send","ajax","readyState","status","response","JSON","parse","responseText","data","_filterData","_filterSetItems","showSuggestions","_abortXhr","map","regex","string","result","tokenfield_toString","test","pattern","filter","abort","setKeys","onClick","_onClick","onMouseDown","_onMouseDown","onMouseOver","_onMouseOver","onFocus","_onFocus","onResize","_onResize","onReset","_onReset","onKeyDown","_onKeyDown","onFocusOut","_onFocusOut","addEventListener","classList","contains","slice","querySelectorAll","remove","add","_selectItem","_refreshItemsSelection","removeEventListener","onPaste","_onPaste","trim","relatedTarget","canAddItem","_newItem","_refreshInput","_defocusItems","hideSuggestions","blur","preventDefault","clipboardData","getData","tokens","search","splitRegex","split","token","setTimeout","_deselectItems","keyCode","_keyAction","_refreshItems","clearTimeout","_keyInput","keyName","keyChar","selected","_getSelectedItems","_selectPrevItem","_selectNextItem","getFocusedItems","selectionStart","selectionEnd","_focusPrevItem","shiftKey","_focusNextItem","onInput","_addItem","focus","_refreshSuggestions","ctrlKey","metaKey","focused","_copy","_delete","focusedItems","copyString","select","execCommand","_removeItem","_focusItem","_fetchData","_getSuggestedItem","nodes","getPath","_getSelectedItemIndex","_getFocusedItemIndex","lastFocused","_defocusItem","setIds","scroll","maxHeight","listBounds","elBounds","bottom","scrollTop","every","k","last","prop","_filterItems","matchCase","splice","isNew","_getItem","clonedItem","ctrl","first","min","max","_getAvailableItem","itemEl","_renderItem","itemHtml","renderSetItemHtml","label","textContent","renderSetItemLabel","_buildEl","child","renderSuggestedItem","replaceChild","childElementCount","removeChild","renderSuggestedItemContent","renderSuggestions","addItems","isArray"],"mappings":"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","file":"js/vendors~seomatic-tokens.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","/**\n * Input field with tagging/token/chip capabilities written in raw JavaScript\n * tokenfield 1.2.2 <https://github.com/KaneCohen/tokenfield>\n * Copyright 2018 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nimport EventEmitter from 'events';\nimport ajax from './ajax.js';\n\nlet _tokenfields = {};\n\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nconst reHasRegExpChar = RegExp(reRegExpChar.source);\n\nconst _factory = document.createElement('div');\n\nconst _templates = {\n  containerTokenfield: `<div class=\"tokenfield tokenfield-mode-tokens\">\n      <input class=\"tokenfield-copy-helper\"\n        style=\"display:none;position:fixed;top:-1000px;right:1000px;\"\n        tabindex=\"-1\"\n        type=\"text\"\n      />\n      <div class=\"tokenfield-set\">\n        <ul></ul>\n      </div>\n      <input class=\"tokenfield-input\" />\n      <div class=\"tokenfield-suggest\">\n        <ul class=\"tokenfield-suggest-list\"></ul>\n      </div>\n    </div>`,\n  containerList: `<div class=\"tokenfield tokenfield-mode-list\">\n      <input class=\"tokenfield-input\" />\n      <div class=\"tokenfield-suggest\">\n        <ul class=\"tokenfield-suggest-list\"></ul>\n      </div>\n      <div class=\"tokenfield-set\">\n        <ul></ul>\n      </div>\n    </div>`,\n  suggestItem: `<li class=\"tokenfield-suggest-item\"></li>`,\n  setItem: `<li class=\"tokenfield-set-item\">\n      <span class=\"item-label\"></span>\n      <a href=\"#\" class=\"item-remove\" tabindex=\"-1\">×</a>\n      <input class=\"item-input\" type=\"hidden\" />\n    </li>`\n};\n\nfunction guid() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16) +\n    (((1 + Math.random()) * 0x10000) | 0).toString(16);\n}\n\nfunction includes(arr, item) {\n  return arr.indexOf(item) >= 0;\n}\n\nfunction getPath(node) {\n  let nodes = [node];\n  while (node.parentNode) {\n    node = node.parentNode;\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction findElement(input) {\n  if (input.nodeName) {\n    return input;\n  } else if (typeof input === 'string') {\n    return document.querySelector(input);\n  }\n  return null;\n}\n\nfunction build(html, all) {\n  if (html.nodeName) return html;\n  html = html.replace(/(\\t|\\n$)/g, '');\n\n  _factory.innerHTML = '';\n  _factory.innerHTML = html;\n  if (all === true) {\n    return _factory.childNodes;\n  } else {\n    return _factory.childNodes[0];\n  }\n}\n\nfunction toString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value === null) {\n    return '';\n  }\n  let result = (value + '');\n  return (result === '0' && (1 / value) === -Infinity) ? '-0' : result;\n}\n\nfunction keyToChar(e) {\n  if (e.key || e.keyIdentifier) {\n    return e.key || String.fromCharCode(parseInt(e.keyIdentifier.substr(2), 16));\n  }\n  return null;\n}\n\nfunction escapeRegex(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string)) ?\n    string.replace(reRegExpChar, '\\\\$&') :\n    string;\n}\n\nfunction makeDefaultsAndOptions() {\n  const _defaults = {\n    focusedItem: null,\n    cache: {},\n    timer: null,\n    xhr: null,\n    suggested: false,\n    suggestedItems: [],\n    setItems: [],\n    events: {},\n    delimiters: {}\n  };\n\n  const _options = {\n    el: null,\n    form: true,               // Listens to reset event on the specifiedform. If set to true listens to\n                              // immediate parent form. Also accepts selectors or elements.\n    mode: 'tokenfield',       // Display mode: tokenfield or list.\n    addItemOnBlur: false,     // Add token if input field loses focus.\n    addItemsOnPaste: false,   // Add tokens using `delimiters` option below to tokenize given string.\n    keepItemsOrder: true,     // Items and New Items values will be set in input with a specific position\n                              // in the list so that you can retreive correct position on the backend.\n    setItems: [],             // List of set items.\n    items: [],                // List of available items to work with.\n                              // Example: [{id: 143, value: 'Hello World'}, {id: 144, value: 'Foo Bar'}].\n    newItems: true,           // Allow input (on delimiter key) of new items.\n    multiple: true,           // Accept multiple items.\n    maxItems: 0,              // Set maximum allowed number of items.\n    minLength: 0,             // Minimum length of the string to be converted into token.\n    keys: {                   // Various action keys.\n      17:  'ctrl',\n      16:  'shift',\n      91:  'meta',\n      8:   'delete',          // Backspace\n      27:  'esc',\n      37:  'left',\n      38:  'up',\n      39:  'right',\n      40:  'down',\n      46:  'delete',\n      65:  'select',          // A\n      67:  'copy',            // C\n      88:  'cut',             // X\n      9:   'delimiter',       // Tab\n      13:  'delimiter',       // Enter\n      108: 'delimiter'        // Numpad Enter\n    },\n    matchRegex: '{value}',    // Match regex where {value} would be replaced by ecaped user input.\n    matchFlags: 'i',          // Flags used in regex matching.\n    matchStart: false,        // Set match regex to test from the beginning of the string.\n    matchEnd: false,          // Set match regex to test from the end of the string.\n    delimiters: [],           // Array of strings which act as delimiters during tokenization.\n    copyProperty: 'name',     // Property of the token used for copy event.\n    copyDelimiter: ', ',      // Delimiter used to populate clipboard with selected tokens.\n    remote: {\n      type: 'GET',            // Ajax request type.\n      url: null,              // Full server url.\n      queryParam: 'q',        // What param to use when asking server for data.\n      delay: 300,             // Dealy between last keydown event and ajax request for data.\n      timestampParam: 't',\n      params: {},\n      headers: {}\n    },\n    placeholder: null,        // Hardcoded placeholder text. If not set, will use placeholder from the element itself.\n    inputType: 'text',        // HTML attribute for the input element which lets mobile browsers use various input modes.\n                              // Accepts text, email, url, and others.\n    minChars: 2,              // Number of characters before we start to look for similar items.\n    maxSuggest: 10,           // Max items in the suggest box.\n    maxSuggestWindow: 10,     // Limit height of the suggest box after given number of items.\n    filterSetItems: true,     // Filters already set items from the suggestions list.\n    filterMatchCase: false,   // Sets case-sensitivity for checking whether new item is already set in the list.\n\n    singleInput: false,       // Pushes all token values into a single. Accepts: true, 'selector', or an element.\n                              // When set to true - would use tokenfield target element as an input to fill.\n    singleInputValue: 'id',   // Which property of the item to use when using fillInput.\n    singleInputDelimiter: ', ',\n\n    itemLabel: 'name',        // Property to use in order to render item label.\n    itemName: 'items',        // If set, for each tag/token there will be added\n                              // input field with array property name:\n                              // name=\"items[]\".\n\n    newItemName: 'items_new', // Suffix that will be added to the new tag in\n                              // case it was not available from the server:\n                              // name=\"items_new[]\".\n\n    itemValue: 'id',         // Value that will be taken out of the results and inserted into itemAttr.\n    newItemValue: 'name',    // Value that will be taken out of the results and inserted into itemAttr.\n    itemData: 'name'         // Which property to search for.\n  };\n  return {_defaults, _options};\n}\n\nclass Tokenfield extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    let { _defaults, _options } = makeDefaultsAndOptions();\n\n    this.id = guid();\n    this.key = `key_${this.id}`;\n    this._vars = Object.assign({}, _defaults);\n    this._options = Object.assign({}, _options, options);\n    this._options.keys = Object.assign({}, _options.keys, options.keys);\n    this._options.remote = Object.assign({}, _options.remote, options.remote);\n    this._templates = Object.assign({}, _templates, options.templates);\n    this._vars.setItems = this._prepareData(this.remapData(this._options.setItems || []));\n    this._focused = false;\n    this._input = null;\n    this._form = false;\n    this._html = {};\n\n    let o = this._options;\n\n    // Make a hash map to simplify filtering later.\n    o.delimiters.forEach((delimiter) => {\n      this._vars.delimiters[delimiter] = true;\n    });\n\n    let el = findElement(o.el);\n    if (el) {\n      this.el = el;\n    } else {\n      throw new Error(`Selector: DOM Element ${o.el} not found.`);\n    }\n\n    if (o.singleInput) {\n      let el = findElement(o.singleInput);\n      if (el) {\n        this._input = el;\n      } else {\n        this._input = this.el;\n      }\n    }\n\n    this.el.tokenfield = this;\n\n    if (o.placeholder === null) {\n      o.placeholder = o.el.placeholder || '';\n    }\n\n    if (o.form) {\n      let form = false;\n      if (o.form.nodeName) {\n        form = o.form;\n      } else if (o.form === true) {\n        let node = this.el;\n        while (node.parentNode) {\n          if (node.nodeName === 'FORM') {\n            form = node;\n            break;\n          }\n          node = node.parentNode;\n        }\n      } else if (typeof form == 'string') {\n        form = document.querySelector(form);\n        if (! form) {\n          throw new Error(`Selector: DOM Element ${o.form} not found.`);\n        }\n      }\n      this._form = form;\n    } else {\n      throw new Error(`Cannot create tokenfield without DOM Element.`);\n    }\n\n    _tokenfields[this.id] = this;\n\n    this._render();\n  }\n\n  _render() {\n    let o = this._options;\n    let html = this._html;\n\n    if (o.mode === 'tokenfield') {\n      html.container = build(this._templates.containerTokenfield);\n    } else {\n      html.container = build(this._templates.containerList);\n    }\n    html.suggest = html.container.querySelector('.tokenfield-suggest');\n    html.suggestList = html.container.querySelector('.tokenfield-suggest-list');\n    html.items = html.container.querySelector('.tokenfield-set > ul');\n    html.input = html.container.querySelector('.tokenfield-input');\n    html.input.setAttribute('type', o.inputType);\n    html.input.placeholder = this._vars.setItems.length ? '' : o.placeholder;\n    html.copyHelper = html.container.querySelector('.tokenfield-copy-helper');\n\n    o.el.style.display = 'none';\n    html.suggest.style.display = 'none';\n    this._renderSizer();\n\n    // Set tokenfield in DOM.\n    html.container.tokenfield = this;\n    o.el.parentElement.insertBefore(html.container, o.el);\n    html.container.insertBefore(o.el, html.container.firstChild);\n\n    this._setEvents();\n    this._renderItems();\n    if (o.mode === 'tokenfield') {\n      this._resizeInput();\n    }\n\n    return this;\n  }\n\n  _renderSizer() {\n    let html = this._html;\n    let b = this._getBounds();\n    let style = window.getComputedStyle(html.container);\n    let compensate = parseInt(style.paddingLeft, 10) +\n      parseInt(style.paddingRight, 10);\n\n    let styles = {\n      width: 'auto',\n      height: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'pre',\n      maxWidth: b.width - compensate + 'px',\n      position: 'fixed',\n      top: -10000 + 'px',\n      left: 10000 + 'px',\n      fontSize: style.fontSize,\n      paddingLeft: style.paddingLeft,\n      paddingRight: style.paddingRight\n    };\n\n    html.sizer = document.createElement('div');\n    html.sizer.id = 'tokenfield-sizer-' + this.id;\n    for (let key in styles) {\n      html.sizer.style[key] = styles[key];\n    }\n    html.container.appendChild(html.sizer);\n  }\n\n  _refreshInput(empty = true) {\n    let v = this._vars;\n    let html = this._html;\n\n    if (empty) html.input.value = '';\n\n    if (this._options.mode === 'tokenfield') {\n      this._resizeInput();\n      let placeholder =  v.setItems.length ? '' : this._options.placeholder;\n      html.input.setAttribute('placeholder', placeholder);\n    }\n    return this;\n  }\n\n  _resizeInput(val = '') {\n    let html = this._html;\n    let b = this._getBounds();\n    let style = window.getComputedStyle(html.container);\n    let compensate = parseInt(style.paddingRight, 10) +\n      parseInt(style.borderRightWidth, 10);\n\n    let fullCompensate = compensate +\n      parseInt(style.paddingLeft, 10) +\n      parseInt(style.borderLeftWidth, 10);\n\n    html.sizer.innerHTML = val;\n    html.sizer.style.maxWidth = b.width - compensate + 'px';\n\n    if (b.width === 0) {\n      html.input.style.width = '100%';\n      return;\n    } else {\n      html.input.style.width = '20px';\n    }\n\n    let sb = html.sizer.getBoundingClientRect();\n    let ib = html.input.getBoundingClientRect();\n    let rw = b.width - (ib.left - b.left) - compensate;\n\n    if (sb.width > rw) {\n      html.input.style.width = b.width - fullCompensate + 'px';\n    } else {\n      html.input.style.width = rw + 'px';\n    }\n  }\n\n  _fetchData(val) {\n    let v = this._vars;\n    let o = this._options;\n    let r = o.remote;\n    let reqData = Object.assign({}, o.params);\n\n    for (let key in r.params) {\n      reqData[key] = r.params[key];\n    }\n\n    if (r.limit) {\n      reqData[r.limit] = o.remote.limit;\n    }\n\n    reqData[r.queryParam] = val;\n    reqData[r.timestampParam] = Math.round((new Date()).getTime() / 1000);\n\n    v.xhr = ajax(reqData, o.remote, () => {\n      if (v.xhr && v.xhr.readyState == 4) {\n        if (v.xhr.status == 200) {\n          let response = JSON.parse(v.xhr.responseText);\n          v.cache[val] = response;\n          let data = this._prepareData(this.remapData(response));\n          let items = this._filterData(val, data);\n          v.suggestedItems = o.filterSetItems ? this._filterSetItems(items) : items;\n          this.showSuggestions();\n        } else if (v.xhr.status > 0) {\n          throw new Error('Error while loading remote data.');\n        }\n        this._abortXhr();\n      }\n    });\n  }\n\n  // Overwriteable method where you can change given data to appropriate format.\n  remapData(data) {\n    return data;\n  }\n\n  _prepareData(data) {\n    return data.map(item => {\n      return Object.assign({}, item, {\n        [this.key]: guid()\n      });\n    });\n  }\n\n  _filterData(val, data) {\n    let o = this._options;\n    let regex = o.matchRegex.replace('{value}', escapeRegex(val));\n    if (o.matchStart) {\n      regex = '^' + regex;\n    } else if (o.matchEnd) {\n      regex = regex + '$';\n    }\n    let pattern = new RegExp(regex, o.matchFlags);\n    return data.filter(item => pattern.test(item[o.itemData]));\n  }\n\n  _abortXhr() {\n    let v = this._vars;\n    if (v.xhr !== null) {\n      v.xhr.abort();\n      v.xhr = null;\n    }\n  }\n\n  _filterSetItems(items) {\n    const key = this._options.itemValue;\n    let v = this._vars;\n    if (! v.setItems.length) return items;\n\n    let setKeys = v.setItems.map(item => item[key]);\n\n    return items.filter(item => {\n      if (setKeys.indexOf(item[key]) === -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  _setEvents() {\n    let v = this._vars;\n    let html = this._html;\n    v.events.onClick = this._onClick.bind(this);\n    v.events.onMouseDown = this._onMouseDown.bind(this);\n    v.events.onMouseOver = this._onMouseOver.bind(this);\n    v.events.onFocus = this._onFocus.bind(this);\n    v.events.onResize = this._onResize.bind(this);\n    v.events.onReset = this._onReset.bind(this);\n    v.events.onKeyDown = this._onKeyDown.bind(this);\n    v.events.onFocusOut = this._onFocusOut.bind(this);\n\n    html.container.addEventListener('click', v.events.onClick);\n\n    // Attach document event only once.\n    if (Object.keys(_tokenfields).length === 1) {\n      document.addEventListener('mousedown', v.events.onMouseDown);\n      window.addEventListener('resize', v.events.onResize);\n    }\n\n    if (this._form && this._form.nodeName) {\n      this._form.addEventListener('reset', v.events.onReset);\n    }\n\n    html.suggestList.addEventListener('mouseover', v.events.onMouseOver);\n    html.input.addEventListener('focus', v.events.onFocus);\n  }\n\n  _onMouseOver(e) {\n    let target = e.target;\n    if (target.classList.contains('tokenfield-suggest-item')) {\n      let selected = [].slice.call(this._html.suggestList.querySelectorAll('.selected'));\n      selected.forEach(item => {\n        if (item !== target) item.classList.remove('selected');\n      });\n      target.classList.add('selected');\n      this._selectItem(target.key, false);\n      this._refreshItemsSelection();\n    }\n  }\n\n  _onReset() {\n    this.setItems(this._options.setItems);\n  }\n\n  _onFocus(e) {\n    let v = this._vars;\n    let html = this._html;\n    let o = this._options;\n\n    html.input.removeEventListener('keydown', v.events.onKeyDown);\n    html.input.addEventListener('keydown', v.events.onKeyDown);\n    html.input.addEventListener('focusout', v.events.onFocusOut);\n\n    if (o.addItemsOnPaste) {\n      v.events.onPaste = this._onPaste.bind(this);\n      html.input.addEventListener('paste', v.events.onPaste);\n    }\n\n    this._focused = true;\n    this._html.container.classList.add('focused');\n    this._resizeInput();\n\n    if (html.input.value.trim().length >= o.minChars) {\n      this.showSuggestions();\n    }\n  }\n\n  _onFocusOut(e) {\n    let v = this._vars;\n    let o = this._options;\n    let html = this._html;\n    html.input.removeEventListener('keydown', v.events.onKeyDown);\n    html.input.removeEventListener('focusout', v.events.onFocusOut);\n\n    if (typeof v.events.onPaste !== 'undefined') {\n      html.input.removeEventListener('paste', v.events.onPaste);\n    }\n\n    if (e.relatedTarget && e.relatedTarget === html.copyHelper) {\n      return;\n    }\n\n    let canAddItem = ((o.multiple && ! o.maxItems) ||\n      (! o.multiple && ! v.setItems.length) ||\n      (o.multiple && o.maxItems && v.setItems.length < o.maxItems));\n\n    if (this._focused &&\n      o.addItemOnBlur &&\n      canAddItem &&\n      this._newItem(html.input.value)\n    ) {\n      this._renderItems()._refreshInput();\n    } else {\n      this._defocusItems()._renderItems();\n    }\n\n    this._focused = false;\n    this._html.container.classList.remove('focused');\n  }\n\n  _onMouseDown(e) {\n    let tokenfield = null;\n    for (let key in _tokenfields) {\n      if (_tokenfields[key]._html.container.contains(e.target)) {\n        tokenfield = _tokenfields[key];\n        break;\n      }\n    }\n\n    if (tokenfield) {\n      for (let key in _tokenfields) {\n        if (key !== tokenfield.id) {\n          _tokenfields[key].hideSuggestions();\n          _tokenfields[key].blur();\n        }\n      }\n\n      // Prevent input blur.\n      if (e.target !== tokenfield._html.input) {\n        e.preventDefault();\n      }\n    } else {\n      for (let key in _tokenfields) {\n        _tokenfields[key].hideSuggestions();\n        _tokenfields[key].blur();\n      }\n    }\n  }\n\n  _onResize() {\n    for (let key in _tokenfields) {\n      _tokenfields[key]._resizeInput(_tokenfields[key]._html.input.value);\n    }\n  }\n\n  _onPaste(e) {\n    let v = this._vars;\n    let o = this._options;\n    let val = e.clipboardData.getData('text');\n    let tokens = [val];\n\n    // Break input using delimiters option.\n    if (o.delimiters.length) {\n      let search = o.delimiters.join('|');\n      let splitRegex = new RegExp(`(${search})`, 'ig');\n      tokens = val.split(splitRegex);\n    }\n\n    let items = tokens\n      .map((token) => token.trim())\n      .filter((token) => {\n        return token.length > 0 &&\n          token.length >= o.minLength &&\n            typeof v.delimiters[token] === 'undefined';\n      })\n      .map((token) => {\n        return this._newItem(token);\n      });\n\n    if (items.length) {\n      setTimeout(() => {\n        this._renderItems()\n          ._refreshInput()\n          ._deselectItems()\n          .hideSuggestions();\n      }, 1);\n\n      e.preventDefault();\n    }\n  }\n\n  _onKeyDown(e) {\n    let v = this._vars;\n    let o = this._options;\n    let html = this._html;\n\n    if (o.maxItems && v.setItems.length >= o.maxItems) {\n      e.preventDefault();\n    }\n\n    if (o.mode === 'tokenfield') {\n      setTimeout(() => {\n        this._resizeInput(html.input.value);\n      }, 1);\n    }\n\n    let key = keyToChar(e);\n    if (typeof o.keys[e.keyCode] !== 'undefined' || includes(o.delimiters, key)) {\n      if (this._keyAction(e)) return true;\n    } else {\n      this._defocusItems()._refreshItems();\n    }\n\n    clearTimeout(v.timer);\n    this._abortXhr();\n\n    if (! o.maxItems || v.setItems.length < o.maxItems) {\n      setTimeout(() => {\n        this._keyInput(e);\n      }, 1);\n    }\n  }\n\n  _keyAction(e) {\n    let item = null;\n    let v = this._vars;\n    const key = this.key;\n    let o = this._options;\n    let html = this._html;\n    let keyName = o.keys[e.keyCode];\n    let val = html.input.value.trim();\n    let keyChar = keyToChar(e);\n\n    if (includes(o.delimiters, keyChar) && typeof keyName === 'undefined') {\n      keyName = 'delimiter';\n    }\n\n    let selected = this._getSelectedItems();\n    if (selected.length) {\n      item = selected[0];\n    }\n\n    switch (keyName) {\n      case 'esc':\n        this._deselectItems()._defocusItems()._renderItems().hideSuggestions();\n        break;\n      case 'up':\n        if (this._vars.suggested) {\n          this._selectPrevItem()._refreshItemsSelection();\n          e.preventDefault();\n        }\n        this._defocusItems()._renderItems();\n        break;\n      case 'down':\n        if (this._vars.suggested) {\n          this._selectNextItem()._refreshItemsSelection();\n          e.preventDefault();\n        }\n        this._defocusItems()._renderItems();\n        break;\n      case 'left':\n        if (this.getFocusedItems().length ||\n          (! html.input.selectionStart && ! html.input.selectionEnd)\n        ) {\n          this._focusPrevItem(e.shiftKey);\n          e.preventDefault();\n        }\n        break;\n      case 'right':\n        if (this.getFocusedItems().length ||\n          html.input.selectionStart === val.length\n        ) {\n          this._focusNextItem(e.shiftKey);\n          e.preventDefault();\n        }\n        break;\n      case 'delimiter':\n        this._abortXhr();\n        this._defocusItems();\n\n        if (! o.multiple && v.setItems.length >= 1) {\n          return false;\n        }\n\n        val = this.onInput(val);\n        if (item) {\n          this._addItem(item);\n        } else if (val.length) {\n          item = this._newItem(val);\n        }\n\n        if (item) {\n          this._renderItems()\n            .focus()\n            ._refreshInput()\n            ._refreshSuggestions()\n            ._deselectItems();\n        }\n        e.preventDefault();\n        break;\n      case 'select':\n        if (! val.length && (e.ctrlKey || e.metaKey)) {\n          this._vars.setItems.forEach((item) => {\n            item.focused = true;\n          });\n          this._refreshItems();\n        } else {\n          return false;\n        }\n        break;\n      case 'cut': {\n        let focusedItems = this.getFocusedItems();\n        if (focusedItems.length && (e.ctrlKey || e.metaKey)) {\n          this._copy()._delete(e);\n        } else {\n          return false;\n        }\n        break;\n      }\n      case 'copy': {\n        let focusedItems = this.getFocusedItems();\n        if (focusedItems.length && (e.ctrlKey || e.metaKey)) {\n          this._copy();\n        } else {\n          return false;\n        }\n        break;\n      }\n      case 'delete': {\n        this._abortXhr();\n        let focusedItems = this.getFocusedItems();\n        if ((! html.input.selectionEnd && e.keyCode === 8) ||\n          (html.input.selectionStart === val.length && e.keyCode === 46) ||\n          focusedItems.length\n        ) {\n          this._delete(e);\n        } else {\n          v.timer = setTimeout(() => {\n            this._keyInput(e);\n          }, o.delay);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n\n    return true;\n  }\n\n  _copy() {\n    let o = this._options;\n    let html = this._html;\n    let copyString = this.getFocusedItems()\n      .map(item => item[o.copyProperty])\n      .join(o.copyDelimiter);\n\n    html.copyHelper.style.display = 'block';\n    html.copyHelper.value = copyString;\n    html.copyHelper.focus();\n    html.copyHelper.select();\n    document.execCommand('copy');\n    html.copyHelper.style.display = 'none';\n    html.copyHelper.value = '';\n    html.input.focus();\n\n    return this;\n  }\n\n  _delete(e) {\n    let v = this._vars;\n    let o = this._options;\n    const key = this.key;\n    let html = this._html;\n    let focusedItems = this.getFocusedItems();\n\n    if (o.mode === 'tokenfield' && v.setItems.length) {\n      if (focusedItems.length) {\n        focusedItems.forEach((item) => {\n          this._removeItem(item[key]);\n        });\n        this._refreshSuggestions()._keyInput(e);\n      } else if (! html.input.selectionStart) {\n        this._focusItem(v.setItems[v.setItems.length - 1][key]);\n      }\n    } else if (focusedItems.length) {\n      focusedItems.forEach((item) => {\n        this._removeItem(item[key]);\n      });\n      this._refreshSuggestions()._keyInput(e);\n    }\n    this._renderItems()._refreshInput(false);\n\n    return this;\n  }\n\n  _keyInput(e) {\n    let v = this._vars;\n    let o = this._options;\n    let html = this._html;\n\n    this._defocusItems()._refreshItems();\n\n    const val = this.onInput(html.input.value.trim(), e);\n\n    if (e.type === 'keydown') {\n      this.emit('input', this, val, e);\n    }\n\n    if (val.length < o.minChars) {\n      this.hideSuggestions();\n      return false;\n    }\n\n    if (! o.multiple && v.setItems.length >= 1) {\n      return false;\n    }\n\n    // Check if we have cache with this val.\n    if (typeof v.cache[val] === 'undefined') {\n      // Get new data.\n      if (o.remote.url) {\n        v.timer = setTimeout(() => {\n          this._fetchData(val);\n        }, o.delay);\n      } else if (! o.remote.url && o.items.length) {\n        let data = this._prepareData(o.items);\n        let items = this._filterData(val, data);\n        v.suggestedItems = o.filterSetItems ? this._filterSetItems(items) : items;\n        this.showSuggestions();\n      }\n    } else {\n      // Work with cached data.\n      let data = this._prepareData(this.remapData(v.cache[val]));\n      let items = this._filterData(val, data);\n      v.suggestedItems = o.filterSetItems ? this._filterSetItems(items) : items;\n      this.showSuggestions();\n    }\n\n    return this;\n  }\n\n  _onClick(e) {\n    let target = e.target;\n\n    if (target.classList.contains('item-remove')) {\n      e.preventDefault();\n\n      this._removeItem(target.key)\n        ._defocusItems()\n        ._renderItems()\n        ._refreshInput(false)\n        ._keyInput(e);\n\n      this.focus();\n    } else if (target.classList.contains('tokenfield-suggest-item')) {\n      let item = this._getSuggestedItem(target.key);\n      this._addItem(item)\n        ._renderItems()\n        ._refreshInput()\n        ._refreshSuggestions()\n        .focus();\n    } else {\n      let setItem = getPath(target).filter((node) => {\n        return node.classList && node.classList.contains('tokenfield-set-item');\n      })[0];\n\n      if (setItem) {\n        this._focusItem(setItem.key, e.shiftKey, e.ctrlKey || e.metaKey, true);\n        this._refreshItems();\n      } else {\n        this._keyInput(e);\n      }\n\n      this.focus();\n    }\n  }\n\n  _selectPrevItem() {\n    const key = this.key;\n    const o = this._options;\n    let items = this._vars.suggestedItems;\n    let index = this._getSelectedItemIndex();\n\n    if (! items.length) {\n      return this;\n    }\n\n    if (index !== null) {\n      if (index === 0) {\n        if (o.newItems) {\n          this._deselectItems();\n        } else {\n          this._selectItem(items[items.length - 1][key]);\n        }\n      } else {\n        this._selectItem(items[index - 1][key]);\n      }\n    } else {\n      this._selectItem(items[items.length - 1][key]);\n    }\n\n    return this;\n  }\n\n  _selectNextItem() {\n    const key = this.key;\n    const o = this._options;\n    let items = this._vars.suggestedItems;\n    let index = this._getSelectedItemIndex();\n\n    if (! items.length) {\n      return this;\n    }\n\n    if (index !== null) {\n      if (index === items.length - 1) {\n        if (o.newItems) {\n          this._deselectItems();\n        } else {\n          this._selectItem(items[0][key]);\n        }\n      } else {\n        this._selectItem(items[index + 1][key]);\n      }\n    } else {\n      this._selectItem(items[0][key]);\n    }\n\n    return this;\n  }\n\n  _focusPrevItem(multiple = false) {\n    const key = this.key;\n    let items = this._vars.setItems;\n    let index = this._getFocusedItemIndex();\n\n    if (! items.length) {\n      return this;\n    }\n\n    if (index !== null) {\n      if (index === 0 && ! multiple) {\n        this._defocusItems();\n      } else if (index === 0 && multiple) {\n        let lastFocused = this._getFocusedItemIndex(true);\n        this._defocusItem(items[lastFocused][key]);\n      } else {\n        this._focusItem(items[index - 1][key], multiple, false, true);\n      }\n    } else {\n      this._focusItem(items[items.length - 1][key], false, false, true);\n    }\n    this._refreshItems();\n\n    return this;\n  }\n\n  _focusNextItem(multiple = false) {\n    const key = this.key;\n    let items = this._vars.setItems;\n    let index = this._getFocusedItemIndex(true);\n\n    if (! items.length) {\n      return this;\n    }\n\n    if (index !== null) {\n      if (index === items.length - 1 && ! multiple) {\n        this._defocusItems();\n      } else if (index === items.length - 1 && multiple) {\n        this._focusItem(items[0][key], multiple);\n      } else {\n        this._focusItem(items[index + 1][key], multiple);\n      }\n    } else {\n      this._focusItem(items[0][key], false);\n    }\n    this._refreshItems();\n\n    return this;\n  }\n\n  _getSelectedItems() {\n    const key = this.key;\n    let setIds = this._vars.setItems.map(item => item[key]);\n    return this._vars.suggestedItems.filter(v => {\n      return v.selected && setIds.indexOf(v[key]) < 0;\n    });\n  }\n\n  _selectItem(key, scroll = false) {\n    this._vars.suggestedItems.forEach(v => {\n      v.selected = v[this.key] === key;\n      if (v.selected && scroll) {\n        let height = parseInt(this._html.suggest.style.maxHeight, 10);\n        if (height) {\n          let listBounds = this._html.suggestList.getBoundingClientRect();\n          let elBounds = v.el.getBoundingClientRect();\n          let top = elBounds.top - listBounds.top;\n          let bottom = top + elBounds.height;\n\n          if (bottom >= height + this._html.suggest.scrollTop) {\n            this._html.suggest.scrollTop = bottom - height;\n          } else if (top < this._html.suggest.scrollTop) {\n            this._html.suggest.scrollTop = top;\n          }\n        }\n      }\n    });\n  }\n\n  _deselectItem(key) {\n    this._vars.suggestedItems.every(v => {\n      if (v[this.key] === key) {\n        v.selected = false;\n        return false;\n      }\n      return true;\n    });\n    return this;\n  }\n\n  _deselectItems() {\n    this._vars.suggestedItems.forEach(v => {\n      v.selected = false;\n    });\n    return this;\n  }\n\n  _refreshItemsSelection() {\n    this._vars.suggestedItems.forEach(v => {\n      if (v.selected && v.el) {\n        v.el.classList.add('selected');\n      } else if (v.el) {\n        v.el.classList.remove('selected');\n      }\n    });\n  }\n\n  _getSelectedItemIndex() {\n    let index = null;\n    this._vars.suggestedItems.every((v, k) => {\n      if (v.selected) {\n        index = k;\n        return false;\n      }\n      return true;\n    });\n    return index;\n  }\n\n  _getFocusedItemIndex(last = false) {\n    let index = null;\n    this._vars.setItems.every((v, k) => {\n      if (v.focused) {\n        index = k;\n        if (! last) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return index;\n  }\n\n  _getItem(val, prop = null) {\n    if (prop === null) prop = this.key;\n    let items = this._filterItems(this._vars.setItems, val, prop);\n    return items.length ? items[0] : null;\n  }\n\n  _getSuggestedItem(val, prop = null) {\n    if (prop === null) prop = this.key;\n    let items = this._filterItems(this._vars.suggestedItems, val, prop);\n    return items.length ? items[0] : null;\n  }\n\n  _getAvailableItem(val, prop = null) {\n    if (prop === null) prop = this.key;\n    let items = this._filterItems(this._options.items, val, prop);\n    return items.length ? items[0] : null;\n  }\n\n  _filterItems(items, val, prop) {\n    const matchCase = this._options.filterMatchCase;\n    return items.filter(v => {\n      if (typeof v[prop] === 'string' && typeof val === 'string') {\n        if (matchCase) return v[prop] === val;\n        return v[prop].toLowerCase() == val.toLowerCase();\n      }\n      return v[prop] == val;\n    });\n  }\n\n  _removeItem(key) {\n    this._vars.setItems.every((item, k) => {\n      if (item[this.key] === key) {\n        this.emit('removeToken', this, item);\n        this._vars.setItems.splice(k, 1);\n        this.emit('removedToken', this, item);\n        this.emit('change', this);\n        return false;\n      }\n      return true;\n    });\n    return this;\n  }\n\n  _addItem(item) {\n    item.focused = false;\n    let o = this._options;\n    // Check if item already exists in a given list.\n    if ((item.isNew && ! this._getItem(item[o.itemData], o.itemData)) ||\n      ! this._getItem(item[o.itemValue], o.itemValue)\n    ) {\n      this.emit('addToken', this, item);\n      if (! this._options.maxItems ||\n        (this._options.maxItems && this._vars.setItems.length < this._options.maxItems)\n      ) {\n        item.selected = false;\n        let clonedItem = Object.assign({}, item);\n        this._vars.setItems.push(clonedItem);\n        this.emit('addedToken', this, clonedItem);\n        this.emit('change', this);\n      }\n    }\n    return this;\n  }\n\n  getFocusedItem() {\n    let items = this._vars.setItems.filter(item => {\n      return item.focused;\n    })[0];\n    if (items.length) return items[0];\n    return null;\n  }\n\n  getFocusedItems() {\n    return this._vars.setItems.filter(item => {\n      return item.focused;\n    });\n  }\n\n  _focusItem(key, shift = false, ctrl = false, add = false) {\n    if (shift) {\n      let first = null;\n      let last = null;\n      let target = null;\n      let length = this._vars.setItems.length;\n      this._vars.setItems.forEach((item, k) => {\n        if (item[this.key] === key) {\n          target = k;\n        }\n        if (first === null && item.focused) {\n          first = k;\n        }\n        if (item.focused) {\n          last = k;\n        }\n      });\n\n      if ((target === 0 || target === length - 1) && first === null && last === null) {\n        return;\n      } else if (first === null && last === null) {\n        this._vars.setItems[target].focused = true;\n      } else if (target === 0 && last === length - 1 && ! add) {\n        this._vars.setItems[first].focused = false;\n      } else {\n        first = Math.min(target, first);\n        last = Math.max(target, last);\n        this._vars.setItems.forEach((item, k) => {\n          item.focused = target === k || (k >= first && k <= last);\n        });\n      }\n    } else {\n      this._vars.setItems.forEach(item => {\n        if (ctrl) {\n          item.focused = item[this.key] === key ? ! item.focused : item.focused;\n        } else {\n          item.focused = item[this.key] === key;\n        }\n      });\n    }\n    return this;\n  }\n\n  _defocusItem(key) {\n    return this._vars.setItems.filter(item => {\n      if (item[this.key] === key) {\n        item.focused = false;\n      }\n    });\n  }\n\n  _defocusItems() {\n    this._vars.setItems.forEach(item => {\n      item.focused = false;\n    });\n    return this;\n  }\n\n  _newItem(value) {\n    let o = this._options;\n\n    if (typeof value === 'string' &&\n      (!value.length || value.length < o.minLength)) return null;\n\n    let item = this._getItem(value, o.itemData) ||\n               this._getSuggestedItem(value, o.itemData) ||\n               this._getAvailableItem(value, o.itemData);\n\n    if (! item && o.newItems) {\n      item = {\n        isNew: true,\n        [this.key]: guid(),\n        [o.itemData]: value\n      };\n      this.emit('newToken', this, item);\n    }\n\n    if (item) {\n      this._addItem(item);\n      return item;\n    }\n\n    return null;\n  }\n\n  // Wrapper for build function in case some of the functions are overwritten.\n  _buildEl(html) {\n    return build(html);\n  }\n\n  _getBounds() {\n    return this._html.container.getBoundingClientRect();\n  }\n\n  _renderItems() {\n    let v = this._vars;\n    let o = this._options;\n    let html = this._html;\n\n    html.items.innerHTML = '';\n    v.setItems.forEach((item, k) => {\n      let itemEl = this._renderItem(item, k);\n      html.items.appendChild(itemEl);\n      item.el = itemEl;\n      if (item.focused) {\n        item.el.classList.add('focused');\n      } else {\n        item.el.classList.remove('focused');\n      }\n    });\n\n    if (v.setItems.length > 1 && o.mode === 'tokenfield') {\n      html.input.setAttribute('placeholder', '');\n    }\n\n    if (this._input) {\n      this._input.value = v.setItems.map(item => item[o.singleInputValue])\n        .join(o.singleInputDelimiter);\n    }\n\n    return this;\n  }\n\n  _refreshItems() {\n    let v = this._vars;\n\n    v.setItems.forEach(item => {\n      if (item.el) {\n        if (item.focused) {\n          item.el.classList.add('focused');\n        } else {\n          item.el.classList.remove('focused');\n        }\n      }\n    });\n  }\n\n  _renderItem(item, k) {\n    let o = this._options;\n\n    let itemHtml = this.renderSetItemHtml(item);\n    let label = itemHtml.querySelector('.item-label');\n    let input = itemHtml.querySelector('.item-input');\n    let remove = itemHtml.querySelector('.item-remove');\n    let position = o.keepItemsOrder ? `[${k}]` : '[]';\n\n    itemHtml.key = item[this.key];\n    remove.key = item[this.key];\n    input.setAttribute('name', (item.isNew ? o.newItemName : o.itemName) + position);\n\n    input.value = item[(item.isNew ? o.newItemValue : o.itemValue)] || null;\n    label.textContent = this.renderSetItemLabel(item);\n    if (item.focused) {\n      itemHtml.classList.add('focused');\n    }\n\n    return itemHtml;\n  }\n\n  onInput(value, e) {\n    return value;\n  }\n\n  renderSetItemHtml() {\n    return this._buildEl(this._templates.setItem);\n  }\n\n  renderSetItemLabel(item) {\n    return item[this._options.itemLabel];\n  }\n\n  renderSuggestions(items) {\n    let v = this._vars;\n    let o = this._options;\n    let html = this._html;\n    let index = this._getSelectedItemIndex();\n\n    if (! items.length) {\n      return this;\n    }\n\n    if (o.maxSuggestWindow === 0) {\n      html.suggest.style.maxHeight = null;\n    }\n\n    if (! v.suggestedItems.length) {\n      return this;\n    }\n\n    if (! o.newItems && index === null) {\n      items[0].selected = true;\n    }\n\n    let maxHeight = 0;\n\n    items.every((item, k) => {\n      if (k >= o.maxSuggest) return false;\n      let child = html.suggestList.childNodes[k];\n      let el = item.el = this.renderSuggestedItem(item);\n\n      if (child) {\n        if (child.itemValue === item[o.itemValue]) {\n          child.key = item[this.key];\n          item.el = child;\n        } else {\n          html.suggestList.replaceChild(el, child);\n        }\n      } else if (!child) {\n        html.suggestList.appendChild(el);\n      }\n\n      if (o.maxSuggestWindow > 0 && k < o.maxSuggestWindow) {\n        maxHeight += html.suggestList.childNodes[k].getBoundingClientRect().height;\n      }\n\n      if (o.maxSuggestWindow > 0 && k === o.maxSuggestWindow) {\n        html.suggest.style.maxHeight = maxHeight + 'px';\n      }\n\n      return true;\n    });\n\n    let overflow = html.suggestList.childElementCount - items.length;\n    if (overflow > 0) {\n      for (let i = overflow- 1; i >= 0; i--) {\n        html.suggestList.removeChild(html.suggestList.childNodes[items.length + i]);\n      }\n    }\n\n    return this;\n  }\n\n  renderSuggestedItem(item) {\n    let o = this._options;\n    let el = this._buildEl(this._templates.suggestItem);\n    el.key = item[this.key];\n    el.itemValue = item[o.itemValue];\n    el.innerHTML = this.renderSuggestedItemContent(item);\n    el.setAttribute('title', item[o.itemData]);\n    if (item.selected) {\n      el.classList.add('selected');\n    }\n    if (! o.filterSetItems) {\n      let setItem = this._getItem(item[o.itemValue], o.itemValue) ||\n        this._getItem(item[o.itemData], o.itemData);\n\n      if (setItem) {\n        el.classList.add('set');\n      }\n    }\n    return el;\n  }\n\n  renderSuggestedItemContent(item) {\n    return item[this._options.itemData];\n  }\n\n  showSuggestions() {\n    if (this._vars.suggestedItems.length) {\n      this.emit('showSuggestions', this);\n      if (! this._options.maxItems || (this._options.maxItems &&\n        this._vars.setItems.length < this._options.maxItems)\n      ) {\n        this._html.suggest.style.display = 'block';\n        this._vars.suggested = true;\n        this.renderSuggestions(this._vars.suggestedItems);\n      }\n      this.emit('shownSuggestions', this);\n    } else {\n      this.hideSuggestions();\n    }\n    return this;\n  }\n\n  _refreshSuggestions() {\n    let v = this._vars;\n    let o = this._options;\n\n    if (this._html.input.value.length < o.minChars) {\n      this.hideSuggestions();\n      return this;\n    }\n\n    let data = this._prepareData(o.items);\n    let items = this._filterData(this._html.input.value, data);\n    v.suggestedItems = o.filterSetItems ? this._filterSetItems(items) : items;\n\n    if (v.suggestedItems.length) {\n      if (! o.maxItems || (o.maxItems &&\n        v.setItems.length < o.maxItems)\n      ) {\n        this.renderSuggestions(v.suggestedItems);\n      } else {\n        this.hideSuggestions();\n      }\n    } else {\n      this.hideSuggestions();\n    }\n\n    return this;\n  }\n\n  hideSuggestions() {\n    this.emit('hideSuggestions', this);\n    this._vars.suggested = false;\n    this._html.suggest.style.display = 'none';\n    this._html.suggestList.innerHTML = '';\n    this.emit('hiddenSuggestions', this);\n    return this;\n  }\n\n  getItems() {\n    return this._vars.setItems.map(item => {\n      return Object.assign({}, item);\n    });\n  }\n\n  setItems(items = []) {\n    this._vars.setItems = [];\n    this.addItems(items);\n    return this;\n  }\n\n  addItems(items = []) {\n    const key = this._options.itemValue;\n    if (! Array.isArray(items)) {\n      items = [items];\n    }\n\n    this._prepareData(items).forEach((item) => {\n      if (item.isNew || typeof item[key] !== 'undefined') {\n        this._addItem(item);\n      }\n    });\n\n    this._renderItems()\n      ._refreshInput()\n      .hideSuggestions();\n\n    return this;\n  }\n\n  sortItems() {\n    let items = [];\n\n    [...this._html.items.childNodes].forEach(el => {\n      let item = this._getItem(el.key);\n      if (item) {\n        items.push(item);\n      }\n    });\n\n    this.setItems(items);\n  }\n\n  removeItem(value) {\n    const o = this._options;\n    if (typeof value === 'object' &&\n      (value[o.itemValue] || value[o.newItemValue])\n    ) {\n      value = value[o.itemValue] || value[o.newItemValue];\n    }\n\n    let item = this._getItem(value, o.itemValue) ||\n               this._getItem(value, o.newItemValue);\n\n    if (! item) {\n      return this;\n    }\n\n    this._removeItem(item[this.key])._renderItems();\n\n    return this;\n  }\n\n  emptyItems() {\n    this._vars.setItems = [];\n    this._renderItems()\n      ._refreshInput()\n      .hideSuggestions();\n    this.emit('change', this);\n    return this;\n  }\n\n  getSuggestedItems() {\n    return this._vars.suggestedItems.map(item => {\n      return Object.assign({}, item);\n    });\n  }\n\n  focus() {\n    this._html.container.classList.add('focused');\n    if (! this._focused) this._html.input.focus();\n    return this;\n  }\n\n  blur() {\n    this._html.container.classList.remove('focused');\n    if (this._focused) this._html.input.blur();\n    return this;\n  }\n\n  remove() {\n    let html = this._html;\n\n    html.container.parentElement.insertBefore(this.el, html.container);\n    html.container.remove();\n    this.el.style.display = 'block';\n\n    if (Object.keys(_tokenfields).length === 1) {\n      document.removeEventListener('mousedown', this._vars.events.onMouseDown);\n      window.removeEventListener('resize', this._vars.events.onResize);\n    }\n\n    if (this._form && this._form.nodeName) {\n      this._form.removeEventListener('reset', this._vars.events.onReset);\n    }\n\n    delete _tokenfields[this.id];\n    delete this.el.tokenfield;\n  }\n}\n\nexport default Tokenfield;\n","/**\n * Simple AJAX handling module.\n * tokenfield 1.2.2 <https://github.com/KaneCohen/tokenfield>\n * Copyright 2018 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nexport default function ajax(params, options = {}, callback = null) {\n  let xhr = new XMLHttpRequest();\n  let url = options.url;\n  let paramsArr = [];\n  for (let key in params) {\n    paramsArr.push(`${key}=${encodeURIComponent(params[key])}`);\n  }\n\n  let paramsString = paramsArr.join('&');\n\n  if (options.type.toLowerCase() === 'get') {\n    url += '?' + paramsString;\n  }\n\n  xhr.open(options.type, url, true);\n\n  for (let header in options.headers) {\n    let value = options.headers[header];\n    if (typeof value === 'function') {\n      value = value(params, options);\n    }\n    xhr.setRequestHeader(header, value);\n  }\n\n  if (callback) {\n    xhr.onreadystatechange = callback;\n  }\n\n  xhr.send(params);\n\n  return xhr;\n}\n"],"sourceRoot":""}